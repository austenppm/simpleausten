module cycleCount(input clock,reset,ce,
                    output reg [7:0] LED0,LED1,LED2,LED3,
					output selector);
	reg [15:0] count;
	always @(posedge clock)begin
		if(reset == 1'b1)
		count <= 32'h00000000;
        else begin
            if(ce == 1'b1) begin
                count <= count + 1;
            end
        end
    end
	assign selector = clock;
	sevenSeg a0(.data(count[31:28]),
			.LED(LED0));
	sevenSeg a1(.data(count[27:24]),
			.LED(LED1));
	sevenSeg a2(.data(count[23:20]),
			.LED(LED2));
	sevenSeg a3(.data(count[19:16]),
			.LED(LED3));
	sevenSeg a4(.data(count[15:12]),
			.LED(LED0));
	sevenSeg a5(.data(count[11:8]),
			.LED(LED1));
	sevenSeg a6(.data(count[7:4]),
			.LED(LED2));
	sevenSeg a7(.data(count[3:0]),
			.LED(LED3));
endmodule
